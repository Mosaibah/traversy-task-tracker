{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abudr\\\\Documents\\\\courses\\\\react\\\\traversy-task-tracker\\\\src\\\\components\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from \"react\";\nimport Button from './Button';\nimport AddTask from './AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = ({\n  title,\n  onAdd\n}) => {\n  _s();\n\n  const [clicked, setClicked] = useState(true);\n  const [buttonText, setButtonText] = useState('Add');\n\n  const onClick = e => {\n    console.log(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-dark bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-brand\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"navbar-toggler\\r btn btn-outline-dark\",\n          type: \"button\",\n          \"data-bs-toggle\": \"collapse\",\n          \"data-bs-target\": \"#navbarSupportedContent\",\n          onClick: clicked ? () => {\n            setClicked(false);\n            setButtonText(\"Close\");\n          } : () => {\n            setClickedtrue;\n            setButtonText = 'Add';\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n          onAdd: onAdd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"V1jifnLlCu8mueZBIymFF2zfam8=\");\n\n_c = Header;\nHeader.defaultProps = {\n  title: 'Task Traker'\n};\nHeader.prototype = {\n  title: PropTypes.string.isRequired\n};\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/abudr/Documents/courses/react/traversy-task-tracker/src/components/Header.js"],"names":["PropTypes","useState","Button","AddTask","Header","title","onAdd","clicked","setClicked","buttonText","setButtonText","onClick","e","console","log","setClickedtrue","defaultProps","prototype","string","isRequired"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAGA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;;AACA,QAAMU,OAAO,GAAIC,CAAD,IAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,GAFD;;AAIA,sBACI;AAAA,2BACG;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA,6BACK;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA,oBAAgCP;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,uCAAlB;AAEQ,UAAA,IAAI,EAAC,QAFb;AAGQ,4BAAe,UAHvB;AAIQ,4BAAe,yBAJvB;AAKQ,UAAA,OAAO,EAAEE,OAAO,GAAG,MAAM;AAAEC,YAAAA,UAAU,CAAC,KAAD,CAAV;AAAmBE,YAAAA,aAAa,CAAC,OAAD,CAAb;AAAuB,WAArD,GAAwD,MAAM;AAACK,YAAAA,cAAc;AAAEL,YAAAA,aAAa,GAAC,KAAd;AAAoB,WAL3H;AAAA,iCAOI;AAAA,sBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAWI,QAAC,OAAD;AAAS,UAAA,KAAK,EAAEH;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA7BD;;GAAMF,M;;KAAAA,M;AA+BNA,MAAM,CAACY,YAAP,GAAsB;AAClBX,EAAAA,KAAK,EAAE;AADW,CAAtB;AAIAD,MAAM,CAACa,SAAP,GAAmB;AACfZ,EAAAA,KAAK,EAAEL,SAAS,CAACkB,MAAV,CAAiBC;AADT,CAAnB;AAIA,eAAef,MAAf","sourcesContent":["import PropTypes from 'prop-types'\r\nimport { useState } from \"react\"\r\n\r\n\r\nimport Button from './Button'\r\nimport AddTask from './AddTask'\r\n\r\nconst Header = ({title, onAdd}) => {\r\n    const [clicked, setClicked] = useState(true)\r\n    const [buttonText, setButtonText] = useState('Add')\r\n    const onClick = (e) =>{\r\n        console.log(e)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n           <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div className=\"container-fluid\">\r\n                    <span className=\"navbar-brand\">{title}</span>\r\n                    <button className=\"navbar-toggler\r\n                            btn btn-outline-dark\" \r\n                            type=\"button\" \r\n                            data-bs-toggle=\"collapse\" \r\n                            data-bs-target=\"#navbarSupportedContent\"\r\n                            onClick={clicked ? () => { setClicked(false); setButtonText(\"Close\")} : () => {setClickedtrue; setButtonText='Add'}  }>\r\n                                \r\n                        <span>{buttonText}</span>\r\n                    </button>\r\n                    <AddTask onAdd={onAdd}/>\r\n                </div>\r\n            </nav>\r\n\r\n\r\n            {/* <Button onClick={onClick}/> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Traker'\r\n}\r\n\r\nHeader.prototype = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n"]},"metadata":{},"sourceType":"module"}