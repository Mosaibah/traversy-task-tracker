{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abudr\\\\Documents\\\\courses\\\\react\\\\traversy-task-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport NoTask from \"./components/NoTask\";\nimport Reminder from \"./components/Reminder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"Doctors Appointment\",\n    day: 'Feb 5th at 9:10pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: \" Shoping\",\n    day: 'Feb 7th at 1:30pm',\n    reminder: false\n  }, {\n    id: 3,\n    text: \"Visit my friends\",\n    day: 'Feb 10th at 8:00am',\n    reminder: false\n  }]); // Delete Task\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  }; // Add Task\n\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10) + 4;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(NoTask, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4wiSRQBKIdan3WH5hUGvK0qAnl4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/abudr/Documents/courses/react/traversy-task-tracker/src/App.js"],"names":["useState","Header","Tasks","NoTask","Reminder","App","tasks","setTasks","id","text","day","reminder","deleteTask","filter","task","toggleReminder","map","addTask","Math","floor","random","newTask","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAoB,qBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CACjC;AACIQ,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,qBAFV;AAGIC,IAAAA,GAAG,EAAE,mBAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GADiC,EAOjC;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,GAAG,EAAE,mBAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAPiC,EAajC;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,kBAFV;AAGIC,IAAAA,GAAG,EAAE,oBAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAbiC,CAAD,CAAlC,CADa,CAsBf;;AACA,QAAMC,UAAU,GAAIJ,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAvBe,CA2Bf;;;AACA,QAAMO,cAAc,GAAIP,EAAD,IAAQ;AAC7BD,IAAAA,QAAQ,CACND,KAAK,CAACU,GAAN,CAAWF,IAAD,IACVA,IAAI,CAACN,EAAL,KAAYA,EAAZ,GACA,EAAC,GAAGM,IAAJ;AAAUH,MAAAA,QAAQ,EAAE,CAACG,IAAI,CAACH;AAA1B,KADA,GAEEG,IAHF,CADM,CAAR;AAMD,GAPD,CA5Be,CAqCf;;;AACA,QAAMG,OAAO,GAAIH,IAAD,IAAU;AACxB,UAAMN,EAAE,GAAGU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAA+B,CAA1C;AACA,UAAMC,OAAO,GAAG;AAACb,MAAAA,EAAD;AAAK,SAAGM;AAAR,KAAhB;AACAP,IAAAA,QAAQ;AACT,GAJD;;AAME,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEU;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF,EAIGX,KAAK,CAACgB,MAAN,GAAe,CAAf,gBACD,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEhB,KAAd;AAAqB,MAAA,QAAQ,EAAEM,UAA/B;AAA2C,MAAA,QAAQ,EAAEG;AAArD;AAAA;AAAA;AAAA;AAAA,YADC,gBAEC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAvDQV,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\"\r\n\r\nimport Header from \"./components/Header\";\r\nimport Tasks from \"./components/Tasks\";\r\nimport NoTask  from \"./components/NoTask\";\r\nimport Reminder from \"./components/Reminder\";\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n        id: 1,\r\n        text: \"Doctors Appointment\",\r\n        day: 'Feb 5th at 9:10pm',\r\n        reminder: true\r\n    },\r\n    {\r\n        id: 2,\r\n        text: \" Shoping\",\r\n        day: 'Feb 7th at 1:30pm',\r\n        reminder: false\r\n    },\r\n    {\r\n        id: 3,\r\n        text: \"Visit my friends\",\r\n        day: 'Feb 10th at 8:00am',\r\n        reminder: false\r\n    }\r\n])\r\n\r\n// Delete Task\r\nconst deleteTask = (id) => {\r\n  setTasks(tasks.filter((task) => task.id !== id))\r\n}\r\n\r\n// Toggle Reminder\r\nconst toggleReminder = (id) => {\r\n  setTasks(\r\n    tasks.map((task) =>\r\n    task.id === id?\r\n    {...task, reminder: !task.reminder}\r\n    : task)\r\n  )\r\n}\r\n\r\n// Add Task\r\nconst addTask = (task) => {\r\n  const id = Math.floor(Math.random() * 10)+4\r\n  const newTask = {id, ...task}\r\n  setTasks()\r\n} \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <Header onAdd={addTask}/>\r\n\r\n      {tasks.length > 0 ?\r\n      <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\r\n      : <NoTask/>}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}